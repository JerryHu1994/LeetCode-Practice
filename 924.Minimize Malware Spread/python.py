class Solution(object):
    def minMalwareSpread(self, graph, initial):
        """
        :type graph: List[List[int]]
        :type initial: List[int]
        :rtype: int
        """
        initial = sorted(initial)
        N = len(initial)
        groups, colored = collections.defaultdict(list), set()
        def helper(node, root):
            groups[root].append(node)
            colored.add(node)
            for ind, val in enumerate(graph[node]):
                if val and ind not in colored:  helper(ind, root)
        for node in initial:
            if node not in colored: helper(node, node)
        pairs = [(k, len(v)) for k,v in groups.iteritems()]
        pairs = sorted(pairs, key = lambda x:[-x[1], x[0]])
        return pairs[0][0]